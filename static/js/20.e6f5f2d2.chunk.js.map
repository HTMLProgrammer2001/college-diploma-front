{"version":3,"sources":["common/BackButton.tsx","common/formElements/InputElement.tsx","utils/validators/required.ts","common/formElements/DateElement.tsx","common/formElements/FileElement.tsx","common/formElements/styles.module.scss","utils/validators/email.ts","utils/validators/lengthIn.ts","utils/validators/phone.ts","pages/ProfileEditPage/EditProfileForm.tsx","utils/helpers/prepareData.ts","redux/profile/edit/thunks.ts","pages/ProfileEditPage/index.tsx"],"names":["BackButton","history","useHistory","variant","onClick","goBack","InputElement","onlyInValid","props","controlId","name","label","column","type","value","input","className","onChange","onFocus","onBlur","isValid","meta","touched","valid","undefined","isInvalid","error","Feedback","style","display","required","str","CustomInput","placeholder","id","isSecure","DateElement","customInput","selected","wrapperClassName","dateFormat","showMonthDropdown","showYearDropdown","d","FileElement","onDrop","acceptedFiles","getRootProps","getInputProps","position","styles","fileDrop","fileDrop__svg","xmlns","x","y","width","height","fileDrop__rect","fileDrop__rect_2","fileDrop__label","module","exports","email","RegExp","test","lengthIn","min","max","Infinity","resultString","isFinite","length","phone","connected","connect","state","user","selectMeInfo","minMaxPassword","reduxForm","form","handleSubmit","initialize","useEffect","onSubmit","Translation","t","Field","defaultValue","component","validate","autocomplete","address","birthday","vals","formData","FormData","key","append","thunkProfileEdit","dispatch","a","startSubmit","userActionsApi","editProfile","prepareProfileEditData","resp","meLoadSuccess","data","newUser","stopSubmit","toast","success","_error","response","message","errors","submitting","isSubmitting","sendForm","submit","edit","useTranslation","document","head","title","Card","Body","Footer","Row","Button","disabled","Spinner","size","animation"],"mappings":"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","file":"static/js/20.e6f5f2d2.chunk.js","sourcesContent":["import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\n\n\nconst BackButton: React.FC<{}> = () => {\n\tconst history = useHistory();\n\n\treturn (\n\t\t<Button variant=\"light\" onClick={() => history.goBack()}>Назад</Button>\n\t);\n};\n\nexport default BackButton;\n","import React, {useEffect} from 'react';\nimport {WrappedFieldProps} from 'redux-form';\nimport {FormControl, FormGroup, FormLabel} from 'react-bootstrap';\n\n\ntype IInputElementProps = WrappedFieldProps & HTMLInputElement & {label: string, onlyInValid: boolean};\nconst InputElement: React.FC<IInputElementProps> = ({onlyInValid = true, ...props}) => {\n\t// useEffect(() => {\n\t// \tif(!props.meta.touched && props.defaultValue)\n\t// \t\tprops.input.onChange(props.defaultValue as any, props.name);\n\t// }, []);\n\n\treturn (\n\t\t<FormGroup controlId={props.name}>\n\t\t\t{\n\t\t\t\tprops.label &&\n\t\t\t\t<FormLabel column={true}>{props.label}</FormLabel>\n\t\t\t}\n\n\t\t<FormControl\n\t\t\ttype={props.type}\n\t\t\tname={props.name}\n\t\t\tvalue={props.input.value}\n\t\t\tclassName={props.className}\n\t\t\tonChange={props.input.onChange}\n\t\t\tonFocus={props.input.onFocus}\n\t\t\tonBlur={props.input.onBlur}\n\t\t\tisValid={!onlyInValid && props.meta.touched ? props.meta.valid : undefined}\n\t\t\tisInvalid={props.meta.touched ? !props.meta.valid : undefined}\n\t\t/>\n\n\t\t\t{\n\t\t\t\tprops.meta.error &&\n\t\t\t\t<FormControl.Feedback type=\"invalid\" style={{display: 'block'}}>\n\t\t\t\t\t{props.meta.touched && props.meta.error}\n\t\t\t\t</FormControl.Feedback>\n\t\t\t}\n\t\t</FormGroup>\n\t);\n};\n\nexport default InputElement;\n","const required = (str: string) => {\n\treturn str ? null : 'Поле обязательно для заполнения'\n};\n\nexport default required;\n","import React from 'react';\nimport {WrappedFieldProps} from 'redux-form';\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\nimport {FormGroup, FormLabel, FormControl} from 'react-bootstrap';\n\n\nconst CustomInput: React.FC<any> = ({onChange, placeholder, value, isSecure, id, onClick}) => (\n\t<input\n\t\tclassName=\"form-control w-100\"\n\t\tvalue={value}\n\t\tonClick={onClick}\n\t\tonChange={onChange}\n\t\tplaceholder={placeholder}\n\t\tid={id}\n\t/>\n);\n\n\ntype IDateElementProps = WrappedFieldProps &\n\tHTMLInputElement & {label: string} & ReactDatePickerProps;\n\nconst DateElement: React.FC<IDateElementProps> = ({meta, input, name, label, className}) => (\n\t<FormGroup>\n\t\t{\n\t\t\tlabel &&\n\t\t\t\t<FormLabel column={true}>{label}</FormLabel>\n\t\t}\n\n\t\t<DatePicker\n\t\t\tcustomInput={<CustomInput/>}\n\t\t\tselected={input.value}\n\t\t\twrapperClassName=\"w-100\"\n\t\t\tdateFormat=\"dd.MM.yyyy\"\n\t\t\tshowMonthDropdown={true}\n\t\t\tshowYearDropdown={true}\n\t\t\tonChange={(d: any) => input.onChange(d, name)}\n\t\t/>\n\n\t\t{\n\t\t\tmeta.touched && meta.error &&\n\t\t\t\t<FormControl.Feedback style={{display: 'block'}} type=\"invalid\">\n\t\t\t\t\t{meta.error}\n\t\t\t\t</FormControl.Feedback>\n\t\t}\n\t</FormGroup>\n);\n\nexport default DateElement;\n","import React, {useState} from 'react';\nimport Dropzone from 'react-dropzone';\nimport {WrappedFieldProps} from 'redux-form';\n\nimport styles from './styles.module.scss';\nimport {FormControl} from 'react-bootstrap';\n\n\ntype IFileElementProps = WrappedFieldProps & {label: string, name: string};\nconst FileElement: React.FC<IFileElementProps> = ({name, label, input, meta}) => {\n\t\tconst handler = (acceptedFiles: File[]) => {\n\t\t\tinput.onChange(acceptedFiles[0] as any, name);\n\t\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Dropzone onDrop={handler}>\n\t\t\t\t{\n\t\t\t\t\t({getRootProps, getInputProps}) => (\n\t\t\t\t\t\t<section style={{position: 'relative'}}>\n\t\t\t\t\t\t\t<div {...getRootProps()} className={styles.fileDrop}>\n\t\t\t\t\t\t\t\t<input {...getInputProps()}/>\n\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\tclassName={styles.fileDrop__svg}\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\tx=\"0\"\n\t\t\t\t\t\t\t\t\t\ty=\"0\"\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\t\tclassName={styles.fileDrop__rect}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\t\t\t\tx=\"0\"\n\t\t\t\t\t\t\t\t\t\ty=\"0\"\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\t\t\t\tclassName={`${styles.fileDrop__rect} ${styles.fileDrop__rect_2}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</svg>\n\n\t\t\t\t\t\t\t\t<p className={styles.fileDrop__label}>\n\t\t\t\t\t\t\t\t\t<div>{label}</div>\n\t\t\t\t\t\t\t\t\t<div>{input.value?.name}</div>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Dropzone>\n\n\t\t\t{\n\t\t\t\tmeta.touched && meta.error &&\n\t\t\t\t<FormControl.Feedback style={{display: 'block'}}>\n\t\t\t\t\t{meta.error}\n\t\t\t\t</FormControl.Feedback>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default FileElement;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileDrop\":\"styles_fileDrop__cljnO\",\"fileDrop__label\":\"styles_fileDrop__label__9H1fT\",\"fileDrop__svg\":\"styles_fileDrop__svg__2L6Jt\",\"fileDrop__rect\":\"styles_fileDrop__rect__30pcF\",\"fileDrop__rect_2\":\"styles_fileDrop__rect_2__1rH_2\"};","const email = (str: string) => {\n\tif(str == null)\n\t\treturn null;\n\n\treturn new RegExp('.+@.+\\\\.\\\\w{2,}', 'i').test(str) ? null : 'Введите корректный email';\n};\n\nexport default email;\n","const lengthIn = (min: number = 0, max: number = Infinity) => (str: string) => {\n\tif(str == null)\n\t\treturn null;\n\n\tlet resultString = 'Поле должно содержать значение';\n\n\tif(min)\n\t\tresultString += ` от ${min}`;\n\n\tif(isFinite(max))\n\t\tresultString += ` до ${max}`;\n\n\treturn str && str.length >= min && str.length <= max ? null : resultString;\n};\n\nexport default lengthIn;\n","const phone = (str: string) => {\n\tif(str == null)\n\t\treturn null;\n\n\treturn new RegExp('(\\\\+38)?0\\\\d{9}').test(str) ? null : 'Введите корректный телефон';\n};\n\nexport default phone;\n","import React, {useEffect} from 'react';\nimport {InjectedFormProps, reduxForm, Field} from 'redux-form';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {Translation} from 'react-i18next';\n\nimport InputElement from '../../common/formElements/InputElement';\nimport DateElement from '../../common/formElements/DateElement';\nimport FileElement from '../../common/formElements/FileElement';\nimport {RootState} from '../../redux';\nimport {selectMeInfo} from '../../redux/me/selectors';\nimport required from '../../utils/validators/required';\nimport email from '../../utils/validators/email';\nimport lengthIn from '../../utils/validators/lengthIn';\nimport phone from '../../utils/validators/phone';\n\n\nconst mapStateToProps = (state: RootState) => ({\n\tuser: selectMeInfo(state)\n});\n\nconst connected = connect(mapStateToProps);\n\nconst minMaxPassword = lengthIn(8, 32);\n\nexport type IProfileEditData = {\n\temail: string,\n\tpassword: string,\n\tconfirm_password: string,\n\tphone: string,\n\tbirthday: string,\n\taddress: string,\n\tavatar: any\n};\n\ntype IOwnProps = ConnectedProps<typeof connected>;\ntype IProfileEditFormProps = InjectedFormProps<IProfileEditData, IOwnProps> & IOwnProps;\nconst ProfileEditForm: React.FC<IProfileEditFormProps> = ({handleSubmit, user, initialize}) => {\n\tuseEffect(() => {\n\t\tinitialize({\n\t\t\temail: user.email,\n\t\t\tphone: user.phone\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<Translation>\n\t\t\t\t{t => (\n\t\t\t\t\t<div className=\"d-md-flex\">\n\t\t\t\t\t\t<div className=\"w-100 mr-md-3\">\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\tdefaultValue={user.email}\n\t\t\t\t\t\t\t\tcomponent={InputElement}\n\t\t\t\t\t\t\t\tvalidate={[required, email]}\n\t\t\t\t\t\t\t\tautocomplete={false}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.password')}\n\t\t\t\t\t\t\t\tcomponent={InputElement}\n\t\t\t\t\t\t\t\tvalidate={[minMaxPassword]}\n\t\t\t\t\t\t\t\tautocomplete={false}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.confirmPassword')}\n\t\t\t\t\t\t\t\tcomponent={InputElement}\n\t\t\t\t\t\t\t\tvalidate={[minMaxPassword]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"w-100 ml-md-3\">\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.phone')}\n\t\t\t\t\t\t\t\tdefaultValue={user.phone}\n\t\t\t\t\t\t\t\tcomponent={InputElement}\n\t\t\t\t\t\t\t\tvalidate={[phone]}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.address')}\n\t\t\t\t\t\t\t\tdefaultValue={user.address}\n\t\t\t\t\t\t\t\tcomponent={InputElement}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tname=\"birthday\"\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.birthday')}\n\t\t\t\t\t\t\t\tdefaultValue={user.birthday}\n\t\t\t\t\t\t\t\tcomponent={DateElement}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Translation>\n\n\t\t\t<Translation>\n\t\t\t\t{t => (\n\t\t\t\t\t<div className=\"center w-100\">\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tname=\"avatar\"\n\t\t\t\t\t\t\tlabel={t('profileEdit.avatar')}\n\t\t\t\t\t\t\tcomponent={FileElement}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Translation>\n\t\t</form>\n\t);\n};\n\nexport default connected(reduxForm<IProfileEditData, IOwnProps>({\n\tform: 'editProfileForm'\n})(ProfileEditForm));\n","export default (vals: Object): FormData => {\n\tlet formData = new FormData();\n\n\tfor(let key in vals){\n\t\tformData.append(key, (vals as any)[key]);\n\t}\n\n\treturn formData;\n};\n","import {ThunkAction, ThunkDispatch} from 'redux-thunk';\nimport {Action} from 'redux';\nimport {startSubmit, stopSubmit} from 'redux-form';\nimport {toast} from 'react-toastify';\n\nimport {RootState} from '../../';\nimport userActionsApi from '../../../utils/api/userActionsApi';\nimport {IProfileEditData} from '../../../pages/ProfileEditPage/EditProfileForm';\nimport {meLoadSuccess} from '../../me/actions';\nimport prepareProfileEditData from '../../../utils/helpers/prepareData';\n\n\nexport type IMeThunkAction = ThunkAction<{}, RootState, unknown, Action<any>>;\n\nconst thunkProfileEdit = (vals: IProfileEditData): IMeThunkAction => {\n\treturn async (dispatch: ThunkDispatch<{}, {}, Action<any>>) => {\n\t\tdispatch(startSubmit('editProfileForm'));\n\n\t\ttry{\n\t\t\tconst resp = await userActionsApi.editProfile(prepareProfileEditData(vals));\n\n\t\t\tdispatch(meLoadSuccess(resp.data.newUser));\n\t\t\tdispatch(stopSubmit('editProfileForm'));\n\n\t\t\ttoast.success('Профиль отредактирован');\n\t\t}\n\t\tcatch (e) {\n\t\t\tdispatch(stopSubmit('editProfileForm', {\n\t\t\t\t_error: e.response?.data.message || e.message,\n\t\t\t\t...e.response?.data.errors\n\t\t\t}));\n\n\t\t\ttoast.error(e.response?.data.message || e.message);\n\t\t}\n\t};\n};\n\nexport default thunkProfileEdit;\n","import React, {useEffect} from 'react';\nimport {Button, Card, Row, Spinner} from 'react-bootstrap';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {submit, isSubmitting} from 'redux-form';\nimport {useTranslation} from 'react-i18next';\n\nimport BackButton from '../../common/BackButton';\nimport ProfileEditForm, {IProfileEditData} from './EditProfileForm';\nimport {RootState} from '../../redux';\nimport thunkProfileEdit from '../../redux/profile/edit/thunks';\n\n\nconst mapStateToProps = (state: RootState) => ({\n\tsubmitting: isSubmitting('editProfileForm')(state)\n});\n\nconst connected = connect(mapStateToProps, (dispatch: any) => ({\n\tsendForm: () => dispatch(submit('editProfileForm')),\n\tedit: (vals: IProfileEditData) => dispatch(thunkProfileEdit(vals))\n}));\n\ntype IProfileEditPageProps = ConnectedProps<typeof connected>;\nconst ProfileEditPage: React.FC<IProfileEditPageProps> = ({sendForm, submitting, edit}) => {\n\tconst {t} = useTranslation();\n\n\tuseEffect(() => {\n\t\tdocument.head.title = t('profileEdit.pageTitle');\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"title\">\n\t\t\t\t{t('profileEdit.pageTitle')}\n\t\t\t</div>\n\n\t\t\t<Card className=\"mr-5\">\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ProfileEditForm onSubmit={edit}/>\n\t\t\t\t</Card.Body>\n\n\t\t\t\t<Card.Footer>\n\t\t\t\t\t<Row className=\"justify-content-between p-2\">\n\t\t\t\t\t\t<BackButton/>\n\t\t\t\t\t\t<Button variant=\"warning\" onClick={sendForm} disabled={submitting}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsubmitting && <Spinner size=\"sm\" animation=\"border\"/>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{t('common.save')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Footer>\n\t\t\t</Card>\n\t\t</>\n\t);\n};\n\nexport default connected(ProfileEditPage);\n"],"sourceRoot":""}