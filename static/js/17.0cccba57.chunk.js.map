{"version":3,"sources":["common/BackButton.tsx","common/formElements/InputElement.tsx","utils/validators/required.ts","common/formElements/DateElement.tsx","common/formElements/FileElement.tsx","common/formElements/styles.module.scss","utils/validators/email.ts","utils/validators/lengthIn.ts","utils/validators/phone.ts","pages/ProfileEditPage/EditProfileForm.tsx","utils/helpers/prepareEditProfileData.ts","redux/profile/edit/thunks.ts","pages/ProfileEditPage/index.tsx"],"names":["BackButton","history","useHistory","variant","onClick","goBack","InputElement","onlyInValid","props","controlId","name","label","column","type","value","input","className","onChange","onFocus","onBlur","isValid","meta","touched","valid","undefined","isInvalid","error","Feedback","style","display","required","str","DateElement","selected","dateFormat","showMonthDropdown","showYearDropdown","d","FileElement","onDrop","acceptedFiles","getRootProps","getInputProps","position","styles","fileDrop","fileDrop__svg","xmlns","x","y","width","height","fileDrop__rect","fileDrop__rect_2","fileDrop__label","module","exports","email","RegExp","test","lengthIn","min","max","Infinity","resultString","isFinite","length","phone","connected","connect","state","user","selectMeInfo","minMaxPassword","reduxForm","form","handleSubmit","initialize","useEffect","onSubmit","Translation","t","Field","defaultValue","component","validate","autocomplete","address","birthday","vals","formData","FormData","Date","getFullYear","getMonth","getDate","key","append","thunkProfileEdit","dispatch","a","startSubmit","userActionsApi","editProfile","prepareProfileEditData","resp","meLoadSuccess","data","newUser","stopSubmit","toast","success","_error","response","message","errors","submitting","isSubmitting","sendForm","submit","edit","useTranslation","document","head","title","Card","Body","Footer","Row","Button","disabled","Spinner","size","animation"],"mappings":"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","file":"static/js/17.0cccba57.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst BackButton: React.FC<{}> = () => {\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Button variant=\"light\" onClick={() => history.goBack()}>Назад</Button>\r\n\t);\r\n};\r\n\r\nexport default BackButton;\r\n","import React, {useEffect} from 'react';\r\nimport {WrappedFieldProps} from 'redux-form';\r\nimport {FormControl, FormGroup, FormLabel} from 'react-bootstrap';\r\n\r\n\r\ntype IInputElementProps = WrappedFieldProps & HTMLInputElement & {label: string, onlyInValid: boolean};\r\nconst InputElement: React.FC<IInputElementProps> = ({onlyInValid = true, ...props}) => {\r\n\t// useEffect(() => {\r\n\t// \tif(!props.meta.touched && props.defaultValue)\r\n\t// \t\tprops.input.onChange(props.defaultValue as any, props.name);\r\n\t// }, []);\r\n\r\n\treturn (\r\n\t\t<FormGroup controlId={props.name}>\r\n\t\t\t{\r\n\t\t\t\tprops.label &&\r\n\t\t\t\t<FormLabel column={true}>{props.label}</FormLabel>\r\n\t\t\t}\r\n\r\n\t\t<FormControl\r\n\t\t\ttype={props.type}\r\n\t\t\tname={props.name}\r\n\t\t\tvalue={props.input.value}\r\n\t\t\tclassName={props.className}\r\n\t\t\tonChange={props.input.onChange}\r\n\t\t\tonFocus={props.input.onFocus}\r\n\t\t\tonBlur={props.input.onBlur}\r\n\t\t\tisValid={!onlyInValid && props.meta.touched ? props.meta.valid : undefined}\r\n\t\t\tisInvalid={props.meta.touched ? !props.meta.valid : undefined}\r\n\t\t/>\r\n\r\n\t\t\t{\r\n\t\t\t\tprops.meta.error &&\r\n\t\t\t\t<FormControl.Feedback type=\"invalid\" style={{display: 'block'}}>\r\n\t\t\t\t\t{props.meta.touched && props.meta.error}\r\n\t\t\t\t</FormControl.Feedback>\r\n\t\t\t}\r\n\t\t</FormGroup>\r\n\t);\r\n};\r\n\r\nexport default InputElement;\r\n","const required = (str: string) => {\r\n\treturn str ? null : 'Поле обязательно для заполнения'\r\n};\r\n\r\nexport default required;\r\n","import React from 'react';\r\nimport {WrappedFieldProps} from 'redux-form';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\r\nimport {FormGroup, FormLabel, FormControl} from 'react-bootstrap';\r\nimport {instanceOf} from 'prop-types';\r\n\r\n\r\ntype IDateElementProps = WrappedFieldProps &\r\n\tHTMLInputElement & {label: string} & ReactDatePickerProps;\r\n\r\nconst DateElement: React.FC<IDateElementProps> = ({meta, input, name, label, className}) => (\r\n\t<FormGroup>\r\n\t\t{\r\n\t\t\tlabel &&\r\n\t\t\t\t<FormLabel column={true}>{label}</FormLabel>\r\n\t\t}\r\n\r\n\t\t<DatePicker\r\n\t\t\tselected={input.value}\r\n\t\t\tclassName={className}\r\n\t\t\tdateFormat=\"dd.MM.yyyy\"\r\n\t\t\tshowMonthDropdown={true}\r\n\t\t\tshowYearDropdown={true}\r\n\t\t\tonChange={(d: any) => input.onChange(d, name)}\r\n\t\t/>\r\n\r\n\t\t{\r\n\t\t\tmeta.touched && meta.error &&\r\n\t\t\t\t<FormControl.Feedback style={{display: 'block'}}>\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</FormControl.Feedback>\r\n\t\t}\r\n\t</FormGroup>\r\n);\r\n\r\nexport default DateElement;\r\n","import React, {useState} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport {WrappedFieldProps} from 'redux-form';\r\n\r\nimport styles from './styles.module.scss';\r\nimport {FormControl} from 'react-bootstrap';\r\n\r\n\r\ntype IFileElementProps = WrappedFieldProps & {label: string, name: string};\r\nconst FileElement: React.FC<IFileElementProps> = ({name, label, input, meta}) => {\r\n\t\tconst handler = (acceptedFiles: File[]) => {\r\n\t\t\tinput.onChange(acceptedFiles[0] as any, name);\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dropzone onDrop={handler}>\r\n\t\t\t\t{\r\n\t\t\t\t\t({getRootProps, getInputProps}) => (\r\n\t\t\t\t\t\t<section style={{position: 'relative'}}>\r\n\t\t\t\t\t\t\t<div {...getRootProps()} className={styles.fileDrop}>\r\n\t\t\t\t\t\t\t\t<input {...getInputProps()}/>\r\n\r\n\t\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\t\tclassName={styles.fileDrop__svg}\r\n\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<rect\r\n\t\t\t\t\t\t\t\t\t\tx=\"0\"\r\n\t\t\t\t\t\t\t\t\t\ty=\"0\"\r\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.fileDrop__rect}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<rect\r\n\t\t\t\t\t\t\t\t\t\tx=\"0\"\r\n\t\t\t\t\t\t\t\t\t\ty=\"0\"\r\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\t\t\t\t\tclassName={`${styles.fileDrop__rect} ${styles.fileDrop__rect_2}`}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t\t\t<p className={styles.fileDrop__label}>\r\n\t\t\t\t\t\t\t\t\t<div>{label}</div>\r\n\t\t\t\t\t\t\t\t\t<div>{input.value?.name}</div>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</Dropzone>\r\n\r\n\t\t\t{\r\n\t\t\t\tmeta.touched && meta.error &&\r\n\t\t\t\t<FormControl.Feedback style={{display: 'block'}}>\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</FormControl.Feedback>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FileElement;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileDrop\":\"styles_fileDrop__3vLx4\",\"fileDrop__label\":\"styles_fileDrop__label__328fS\",\"fileDrop__svg\":\"styles_fileDrop__svg__1fjtk\",\"fileDrop__rect\":\"styles_fileDrop__rect__3KjTF\",\"fileDrop__rect_2\":\"styles_fileDrop__rect_2__3UJkx\"};","const email = (str: string) => {\r\n\tif(str == null)\r\n\t\treturn null;\r\n\r\n\treturn new RegExp('.+@.+\\\\.\\\\w{2,}', 'i').test(str) ? null : 'Введите корректный email';\r\n};\r\n\r\nexport default email;\r\n","const lengthIn = (min: number = 0, max: number = Infinity) => (str: string) => {\r\n\tif(str == null)\r\n\t\treturn null;\r\n\r\n\tlet resultString = 'Поле должно содержать значение';\r\n\r\n\tif(min)\r\n\t\tresultString += ` от ${min}`;\r\n\r\n\tif(isFinite(max))\r\n\t\tresultString += ` до ${max}`;\r\n\r\n\treturn str && str.length >= min && str.length <= max ? null : resultString;\r\n};\r\n\r\nexport default lengthIn;\r\n","const phone = (str: string) => {\r\n\tif(str == null)\r\n\t\treturn null;\r\n\r\n\treturn new RegExp('(\\\\+38)?0\\\\d{9}').test(str) ? null : 'Введите корректный телефон';\r\n};\r\n\r\nexport default phone;\r\n","import React, {useEffect} from 'react';\r\nimport {InjectedFormProps, reduxForm, Field} from 'redux-form';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {Translation} from 'react-i18next';\r\n\r\nimport InputElement from '../../common/formElements/InputElement';\r\nimport DateElement from '../../common/formElements/DateElement';\r\nimport FileElement from '../../common/formElements/FileElement';\r\nimport {RootState} from '../../redux';\r\nimport {selectMeInfo} from '../../redux/me/selectors';\r\nimport required from '../../utils/validators/required';\r\nimport email from '../../utils/validators/email';\r\nimport lengthIn from '../../utils/validators/lengthIn';\r\nimport phone from '../../utils/validators/phone';\r\n\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n\tuser: selectMeInfo(state)\r\n});\r\n\r\nconst connected = connect(mapStateToProps);\r\n\r\nconst minMaxPassword = lengthIn(8, 32);\r\n\r\nexport type IProfileEditData = {\r\n\temail: string,\r\n\tpassword: string,\r\n\tconfirm_password: string,\r\n\tphone: string,\r\n\tbirthday: string,\r\n\taddress: string,\r\n\tavatar: any\r\n};\r\n\r\ntype IOwnProps = ConnectedProps<typeof connected>;\r\ntype IProfileEditFormProps = InjectedFormProps<IProfileEditData, IOwnProps> & IOwnProps;\r\nconst ProfileEditForm: React.FC<IProfileEditFormProps> = ({handleSubmit, user, initialize}) => {\r\n\tuseEffect(() => {\r\n\t\tinitialize({\r\n\t\t\temail: user.email,\r\n\t\t\tphone: user.phone\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Translation>\r\n\t\t\t\t{t => (\r\n\t\t\t\t\t<div className=\"d-md-flex\">\r\n\t\t\t\t\t\t<div className=\"w-100 mr-md-3\">\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\tdefaultValue={user.email}\r\n\t\t\t\t\t\t\t\tcomponent={InputElement}\r\n\t\t\t\t\t\t\t\tvalidate={[required, email]}\r\n\t\t\t\t\t\t\t\tautocomplete={false}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.password')}\r\n\t\t\t\t\t\t\t\tcomponent={InputElement}\r\n\t\t\t\t\t\t\t\tvalidate={[minMaxPassword]}\r\n\t\t\t\t\t\t\t\tautocomplete={false}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tname=\"confirm_password\"\r\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.confirmPassword')}\r\n\t\t\t\t\t\t\t\tcomponent={InputElement}\r\n\t\t\t\t\t\t\t\tvalidate={[minMaxPassword]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"w-100 ml-md-3\">\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.phone')}\r\n\t\t\t\t\t\t\t\tdefaultValue={user.phone}\r\n\t\t\t\t\t\t\t\tcomponent={InputElement}\r\n\t\t\t\t\t\t\t\tvalidate={[phone]}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"address\"\r\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.address')}\r\n\t\t\t\t\t\t\t\tdefaultValue={user.address}\r\n\t\t\t\t\t\t\t\tcomponent={InputElement}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"birthday\"\r\n\t\t\t\t\t\t\t\tlabel={t('profileEdit.birthday')}\r\n\t\t\t\t\t\t\t\tdefaultValue={user.birthday}\r\n\t\t\t\t\t\t\t\tcomponent={DateElement}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Translation>\r\n\r\n\t\t\t<Translation>\r\n\t\t\t\t{t => (\r\n\t\t\t\t\t<div className=\"center w-100\">\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\tlabel={t('profileEdit.avatar')}\r\n\t\t\t\t\t\t\tcomponent={FileElement}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Translation>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default connected(reduxForm<IProfileEditData, IOwnProps>({\r\n\tform: 'editProfileForm'\r\n})(ProfileEditForm));\r\n","import {IProfileEditData} from '../../pages/ProfileEditPage/EditProfileForm';\r\n\r\n\r\nexport default (vals: IProfileEditData): FormData => {\r\n\tlet formData = new FormData();\r\n\r\n\tif(vals.birthday) {\r\n\t\tlet d = new Date(vals.birthday);\r\n\t\tvals.birthday = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n\t}\r\n\r\n\tfor(let key in vals){\r\n\t\tformData.append(key, (vals as any)[key]);\r\n\t}\r\n\r\n\treturn formData;\r\n};\r\n","import {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {Action} from 'redux';\r\nimport {startSubmit, stopSubmit} from 'redux-form';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport {RootState} from '../../';\r\nimport userActionsApi from '../../../utils/api/userActionsApi';\r\nimport {IProfileEditData} from '../../../pages/ProfileEditPage/EditProfileForm';\r\nimport {meLoadSuccess} from '../../me/actions';\r\nimport prepareProfileEditData from '../../../utils/helpers/prepareEditProfileData';\r\n\r\n\r\nexport type IMeThunkAction = ThunkAction<{}, RootState, unknown, Action<any>>;\r\n\r\nconst thunkProfileEdit = (vals: IProfileEditData): IMeThunkAction => {\r\n\treturn async (dispatch: ThunkDispatch<{}, {}, Action<any>>) => {\r\n\t\tdispatch(startSubmit('editProfileForm'));\r\n\r\n\t\ttry{\r\n\t\t\tconst resp = await userActionsApi.editProfile(prepareProfileEditData(vals));\r\n\r\n\t\t\tdispatch(meLoadSuccess(resp.data.newUser));\r\n\t\t\tdispatch(stopSubmit('editProfileForm'));\r\n\r\n\t\t\ttoast.success('Профиль отредактирован');\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tdispatch(stopSubmit('editProfileForm', {\r\n\t\t\t\t_error: e.response?.data.message || e.message,\r\n\t\t\t\t...e.response?.data.errors\r\n\t\t\t}));\r\n\r\n\t\t\ttoast.error(e.response?.data.message || e.message);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default thunkProfileEdit;\r\n","import React, {useEffect} from 'react';\r\nimport {Button, Card, Row, Spinner} from 'react-bootstrap';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {submit, isSubmitting} from 'redux-form';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nimport BackButton from '../../common/BackButton';\r\nimport ProfileEditForm, {IProfileEditData} from './EditProfileForm';\r\nimport {RootState} from '../../redux';\r\nimport thunkProfileEdit from '../../redux/profile/edit/thunks';\r\n\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n\tsubmitting: isSubmitting('editProfileForm')(state)\r\n});\r\n\r\nconst connected = connect(mapStateToProps, (dispatch: any) => ({\r\n\tsendForm: () => dispatch(submit('editProfileForm')),\r\n\tedit: (vals: IProfileEditData) => dispatch(thunkProfileEdit(vals))\r\n}));\r\n\r\ntype IProfileEditPageProps = ConnectedProps<typeof connected>;\r\nconst ProfileEditPage: React.FC<IProfileEditPageProps> = ({sendForm, submitting, edit}) => {\r\n\tconst {t} = useTranslation();\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.head.title = t('profileEdit.pageTitle');\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"title\">\r\n\t\t\t\t{t('profileEdit.pageTitle')}\r\n\t\t\t</div>\r\n\r\n\t\t\t<Card className=\"mr-5\">\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<ProfileEditForm onSubmit={edit}/>\r\n\t\t\t\t</Card.Body>\r\n\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Row className=\"justify-content-between p-2\">\r\n\t\t\t\t\t\t<BackButton/>\r\n\t\t\t\t\t\t<Button variant=\"warning\" onClick={sendForm} disabled={submitting}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsubmitting && <Spinner size=\"sm\" animation=\"border\"/>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t{t('common.save')}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default connected(ProfileEditPage);\r\n"],"sourceRoot":""}